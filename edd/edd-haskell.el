(use-package hi2
  :delight
  (hi2-mode))

(use-package haskell-mode
  :delight
  (haskell-doc-mode " üìú")
  :mode "\\.hs\\'"
  :hook
  (haskell-mode . haskell-doc-mode)
  (haskell-mode . turn-on-hi2)
  (haskell-mode . haskell-indentation-mode)
  (haskell-mode . haskell-decl-scan-mode)
  (haskell-mode . edd-haskell/prettify)
  :init
  (let ((my-cabal-path (expand-file-name "~/.cabal/bin")))
    (setenv "PATH" (concat my-cabal-path ":" (getenv "PATH")))
    (add-to-list 'exec-path my-cabal-path))
  :config
  (setq
   haskell-tags-on-save t
   haskell-process-suggest-remove-import-lines t
   haskell-process-auto-import-loaded-modules t
   haskell-process-type 'cabal-repl
   haskell-process-log t)
  (when (not (string-match-p (regexp-quote (expand-file-name "~/.local/bin")) (getenv "PATH")))
    (setenv "PATH"
            (concat
             (getenv "PATH") ":" (expand-file-name "~/.local/bin") )))

  (defun edd-haskell/prettify ()
    (setq-local
               prettify-symbols-alist
               '(("&&" . ?‚àß)
                 ("++" . ?‚ß∫)
                 ("+++" . ?‚ßª)
                 ("--" . 9548)
                 ("-->" . ?‚ü∂)
                 ("-/->" . ?‚Üõ)
                 ("->" . ?‚Üí)
                 ("->>" . ?‚Ü†)
                 ("-o->" . ?‚á¥)
                 ("-|->" . ?‚á∏)
                 ("-|>" . ?‚áæ)
                 ("-||->" . ?‚áª)
                 ("..." . ?‚Ä¶)
                 ("/<" . ?‚âÆ)
                 ("/=" . ?‚â†)
                 ("/>" . ?‚âØ)
                 ("::" . ?‚à∑)
                 (":=" . ?‚âî)
                 ("<*>" . ?‚äõ)
                 ("<+>" . 8853)
                 ("<-" . ?‚àà)
                 ("<--" . ?‚üµ)
                 ("<-->" . ?‚ü∑)
                 ("<--|" . ?‚üª)
                 ("<-/-" . ?‚Üö)
                 ("<-<" . ?‚Ü¢)
                 ("<->" . ?‚Üî)
                 ("<-o-" . ?‚¨∞)
                 ("<-|" . ?‚Ü§)
                 ("<-|-" . ?‚á∑)
                 ("<-|->" . ?‚áπ)
                 ("<-||-" . ?‚á∫)
                 ("<-||->" . ?‚áº)
                 ("<<" . ?‚â™)
                 ("<<-" . ?‚Üû)
                 ("<<-<" . ?‚¨ª)
                 ("<<<" . ?‚ãò)
                 ("<=" . ?‚â§)
                 ("<==" . ?‚ü∏)
                 ("<==>" . ?‚ü∫)
                 ("<==|" . ?‚üΩ)
                 ("<=>" . ?‚áî)
                 ("<=|" . ?‚§Ü)
                 ("<|" . ?‚ä≤)
                 ("<|-" . ?‚áΩ)
                 ("<|-|>" . ?‚áø)
                 ("<~" . ?‚áú)
                 ("=:" . ?‚âï)
                 ("==" . ?‚â°)
                 ("==>" . ?‚üπ)
                 ("=>" . ?‚áí)
                 ("=?" . ?‚âü)
                 ("=def" . ?‚âù)
                 (">->" . ?‚Ü£)
                 (">->>" . ?‚§ñ)
                 ("><" . ?‚ãà)
                 (">=" . 8805)
                 (">=" . ?‚â•)
                 (">>" . ?‚â´)
                 (">>=" . 10524)
                 (">>>" . ?‚ãô)
                 ("Bool" . 120121)
                 ("Int" . 8484)
                 ("Integer" . 8484)
                 ("\\" . ?Œª)
                 ("assert" . 8870)
                 ("diff" . 8783)
                 ("empty" . 8709)
                 ("empty" . ?‚àÖ)
                 ("exists" . ?‚àÉ)
                 ("false" . 8869)
                 ("forall" . ?‚àÄ)
                 ("intersection" . ?‚à©)
                 ("isProperSubsetOf" . ?‚äÇ)
                 ("isSubsetOf" . ?‚äÜ)
                 ("mappend" . ?‚äï)
                 ("mempty" . ?‚àÖ)
                 ("not" . ?¬¨)
                 ("notElem" . ?‚àâ)
                 ("notMember" . ?‚àâ)
                 ("product" . 8719)
                 ("subsetOf" . 8838)
                 ("sum" . 8721)
                 ("true" . 8868)
                 ("undefined" . ?‚ä•)
                 ("union" . ?‚à™)
                 ("|-->" . ?‚üº)
                 ("|->" . ?‚Ü¶)
                 ("|==>" . ?‚üæ)
                 ("|=>" . ?‚§á)
                 ("|>" . ?‚ä≥)
                 ("|A|" . ?ùî∏)
                 ("|B|" . ?ùîπ)
                 ("|C|" . ?‚ÑÇ)
                 ("|D|" . ?ùîª)
                 ("|E|" . ?ùîº)
                 ("|F|" . ?ùîΩ)
                 ("|Gamma|" . ?‚Ñæ)
                 ("|G|" . ?ùîæ)
                 ("|H|" . ?‚Ñç)
                 ("|I|" . ?ùïÄ)
                 ("|J|" . ?ùïÅ)
                 ("|K|" . ?ùïÇ)
                 ("|L|" . ?ùïÉ)
                 ("|M|" . ?ùïÑ)
                 ("|N|" . ?‚Ñï)
                 ("|O|" . ?ùïÜ)
                 ("|Pi|" . ?‚Ñø)
                 ("|P|" . ?‚Ñô)
                 ("|Q|" . ?‚Ñö)
                 ("|R|" . ?‚Ñù)
                 ("|S|" . ?ùïä)
                 ("|T|" . ?ùïã)
                 ("|U|" . ?ùïå)
                 ("|V|" . ?ùïç)
                 ("|W|" . ?ùïé)
                 ("|X|" . ?ùïè)
                 ("|Y|" . ?ùïê)
                 ("|Z|" . ?‚Ñ§)
                 ("|gamma|" . ?‚ÑΩ)
                 ("|pi|" . ?‚Ñº)
                 ("||" . 8744)
                 ("||" . ?‚à®)
                 ("|||" . ?‚´¥)
                 ("~>" . ?‚áù)
                 ("!" . 172)))
    (prettify-symbols-mode)
    )

  :bind
  (
   ("C-c h h" . switch-to-haskell)
   :map haskell-mode-map
   ("C-c C-l" . haskell-process-load-or-reload)
   ("C-c C-z" . haskell-interactive-switch)
   ("C-c C-n C-t" . haskell-process-do-type)
   ("C-c C-n C-i" . haskell-process-do-info)
   ("C-c C-n C-c" . haskell-process-cabal-build)
   ("C-c C-n c" . haskell-process-cabal)
   ("C-c DEL" . haskell-hoogle)))


(use-package intero
  :commands (intero-mode intero-mode-blacklist)
  :delight " ‚ÄΩ"
  :hook
  (haskell-mode . intero-mode)
  (haskell-mode . intero-mode-blacklist)
  :init
  (setq intero-blacklist (list (expand-file-name "~/.xmonad")))
  :bind
  (:map intero-mode-map
   ("C-c C-j" . intero-repl)))

(use-package flymake-hlint)

(provide 'edd-haskell)
